# docker-compose.yml
services:  # <--- CLAVE: Define el bloque de servicios

  flask_app: # <-- Servicio 1, indentado bajo services
    build: .
    container_name: my_flask_ong_app
    ports:
      - "5001:5000"
    volumes:
      - ./ong_app:/app/ong_app
      - ./run.py:/app/run.py
      # - ./requirements.txt:/app/requirements.txt # Podemos comentar esto si no cambia
    environment:
      - FLASK_APP=ong_app:create_app # Le dice a Flask dónde encontrar la factory
      - FLASK_ENV=development        # Activa modo dev (debug y reloader)
      - SECRET_KEY=mi_super_secret_del_compose_123! # Usa la variable de aquí
      # Variables de Odoo
      - ODOO_URL=http://odoo:8069
      - ODOO_DB=ong_db
      - ODOO_USER=miguel.romero.3@etu.unige.ch
      - ODOO_PASSWORD=simplepassword
    depends_on:
      - odoo
    networks:
      - ong_network # Lo añadimos a la red personalizada

  odoo: # <-- Servicio 2, indentado bajo services (mismo nivel que flask_app)
    image: odoo:16.0
    container_name: odoo_service
    depends_on:
      - odoo_db
    ports:
      - "8069:8069"
    volumes:
      - odoo_data:/var/lib/odoo # Volumen nombrado
    environment:
      - HOST=odoo_db
      - PORT=5432
      - USER=odoo
      - PASSWORD=odoo_password # Contraseña de conexión BD Odoo (definida abajo)
      # - ODOO_MASTER_PASSWORD=3hbh-nbcc-ht99 # Tu master password guardada (descomentar si necesitas crear BDs de nuevo)
    networks:
      - ong_network # Lo añadimos a la red personalizada

  odoo_db: # <-- Servicio 3, indentado bajo services (mismo nivel que flask_app)
    image: postgres:15
    container_name: odoo_postgres_db
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=odoo_password # ¡¡IMPORTANTE!! Misma contraseña que Odoo usa para conectar
      - POSTGRES_USER=odoo            # ¡¡IMPORTANTE!! Mismo usuario que Odoo usa para conectar
    volumes:
      - postgres_data:/var/lib/postgresql/data # Volumen nombrado
    networks:
      - ong_network # Lo añadimos a la red personalizada

# --- Volúmenes Nombrados (Nivel Superior) ---
volumes: # <-- Al mismo nivel que 'services'
  odoo_data:
  postgres_data:

# --- Red Personalizada (Nivel Superior) ---
networks: # <-- Al mismo nivel que 'services'
  ong_network:
    driver: bridge